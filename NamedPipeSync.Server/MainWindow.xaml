<mah:MetroWindow x:Class="NamedPipeSync.Server.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                 xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                 xmlns:viewModels="clr-namespace:NamedPipeSync.Server.ViewModels"
                 xmlns:converters="clr-namespace:NamedPipeSync.Server.Converters"
                 mc:Ignorable="d"
                 d:DataContext="{d:DesignInstance Type=viewModels:MainWindowServerViewModel, IsDesignTimeCreatable=True}"
                 Title="{Binding Title}"
                 Width="500" Height="380"
                 MinWidth="320"
                 MinHeight="240"
                 WindowStartupLocation="CenterScreen">
    <mah:MetroWindow.Resources>
        <converters:ConnectionStateToGlyphConverter x:Key="ConnectionStateGlyphConverter" />
        <!-- New converter for the Action column so it can render a different glyph set -->
        <converters:ActionStateToGlyphConverter x:Key="ActionStateGlyphConverter" />

        <!-- DataGrid column header look -->
        <Style x:Key="ProfessionalColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Padding" Value="8,4" />
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>

        <!-- DataGrid cell padding and trimming -->
        <Style x:Key="ProfessionalCellStyle" TargetType="DataGridCell">
            <Setter Property="Padding" Value="8,2" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>

        <!-- DataGrid row style -->
        <Style x:Key="ProfessionalRowStyle" TargetType="DataGridRow">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="FontSize" Value="13" />
        </Style>
    </mah:MetroWindow.Resources>

    <dxmvvm:Interaction.Triggers>
        <dxmvvm:EventToCommand EventName="Loaded" Command="{Binding LoadedCommand}" />
    </dxmvvm:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Header -->
        <Grid Grid.Row="0" Margin="12,10,12,6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Vertical">
                <TextBlock Text="Server"
                           FontWeight="SemiBold"
                           FontSize="18"
                           Margin="0,0,0,2" />
                <TextBlock Text="Named pipe synchronization server"
                           Opacity="0.7"
                           FontSize="12" />
            </StackPanel>

            <Border Grid.Column="1"
                    Padding="10,6"
                    CornerRadius="4"
                    VerticalAlignment="Center">
                <TextBlock Text="{Binding Clients.Count, StringFormat=Clients: {0}}"
                           FontWeight="SemiBold" />
            </Border>
        </Grid>

        <!-- Data -->
        <DataGrid Grid.Row="1" Margin="12,0,12,10"
                  ItemsSource="{Binding Clients}"
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  AlternationCount="2"
                  AlternatingRowBackground="#0F000000"
                  GridLinesVisibility="Horizontal"
                  HeadersVisibility="Column"
                  RowHeaderWidth="0"
                  SelectionMode="Extended"
                  SelectionUnit="FullRow"
                  IsSynchronizedWithCurrentItem="True"
                  ColumnHeaderStyle="{StaticResource ProfessionalColumnHeaderStyle}"
                  CellStyle="{StaticResource ProfessionalCellStyle}"
                  RowStyle="{StaticResource ProfessionalRowStyle}">

            <DataGrid.Columns>
                <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="SizeToCells" />
                <DataGridTemplateColumn Header="Connection" Width="2*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock
                                    FontFamily="Segoe Fluent Icons"
                                    FontSize="16"
                                    TextAlignment="Center"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    ToolTip="{Binding Connection}"
                                    Text="{Binding Connection, Converter={StaticResource ConnectionStateGlyphConverter}}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="DarkGray" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Connection}" Value="Connected">
                                                    <Setter Property="Foreground" Value="Green" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Connection}" Value="Disconnected">
                                                    <Setter Property="Foreground" Value="Orange" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="X" Binding="{Binding X, StringFormat=F2}" Width="*" />
                <DataGridTextColumn Header="Y" Binding="{Binding Y, StringFormat=F2}" Width="*" />

                <!-- Action column: per-row button that calls ToggleClientCommand with the row Id -->
                <DataGridTemplateColumn Header="Action" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Button Padding="8,4"
                                        Command="{Binding DataContext.ToggleClientCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                        CommandParameter="{Binding Id}"
                                        ToolTip="{Binding Connection}">
                                    <TextBlock FontFamily="Segoe Fluent Icons"
                                               FontSize="16"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Text="{Binding Connection, Converter={StaticResource ActionStateGlyphConverter}}" />
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Background" Value="LightGray" />
                                            <Setter Property="Foreground" Value="Black" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Connection}" Value="Connected">
                                                    <!--<Setter Property="Background" Value="Salmon" />-->
                                                    <Setter Property="Foreground" Value="White" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Connection}" Value="Disconnected">
                                                    <!--<Setter Property="Background" Value="LightGreen" />-->
                                                    <Setter Property="Foreground" Value="White" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <!-- Actions -->
        <Grid Grid.Row="2" Margin="12,0,12,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- Left actions -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <Button Margin="0,0,8,0"
                        Content="Close all clients"
                        Command="{Binding CloseAllClientsCommand}"
                        Padding="12,6"
                        BorderBrush="{DynamicResource Brush.Error\t}"
                        BorderThickness="2"
                        Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                <Button
                        Content="Start all clients"
                        Command="{Binding StartAllCommand}"
                        IsEnabled="{Binding CanStartAll}"
                        Padding="12,6"
                        Background="{DynamicResource MahApps.Brushes.Accent4}"
                        Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}" />
            </StackPanel>

            <!-- Right actions: icon-only buttons -->
            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" >
                <Button Margin="8,0,0,0"
                        ToolTip="Start sending"
                        Command="{Binding StartSendingCommand}"
                        Padding="8,6">
                    <TextBlock Text="▶" FontSize="14"/>
                </Button>
                <Button Margin="8,0,0,0"
                        ToolTip="Stop sending"
                        Command="{Binding StopSendingCommand}"
                        Padding="8,6">
                    <TextBlock Text="■" FontSize="14"/>
                </Button>
                <Button Margin="8,0,0,0"
                        ToolTip="Reset position"
                        Command="{Binding ResetPositionCommand}"
                        Padding="8,6">
                    <TextBlock Text="↺" FontSize="14"/>
                </Button>
            </StackPanel>
        </Grid>

        <!-- Status Bar -->
        <StatusBar Grid.Row="3" Margin="8,0" Padding="6,2">
            <StatusBarItem>
                <TextBlock Text="{Binding Clients.Count, StringFormat=Clients: {0}}" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <!-- Bind to ViewModel's StatusBarMessage which will show a warning when client exe is missing -->
                <TextBlock Text="{Binding StatusBarMessage}" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</mah:MetroWindow>
